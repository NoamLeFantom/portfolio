{"ast":null,"code":"var _jsxFileName = \"E:\\\\NOAM\\\\logiciels\\\\wamp64\\\\www\\\\PortefolioV3\\\\image-collection-manager\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport ProjectList from './components/ProjectList';\nimport ProjectDetailsModal from './components/ProjectDetailsModal';\nimport ProjectManager from './ProjectManager';\nimport axios from 'axios';\nimport Modal from 'react-modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nModal.setAppElement('#root'); // Assurez-vous que le root est configuré dans index.js\n\nfunction App() {\n  _s();\n  const [projects, setProjects] = useState({});\n  const [selectedProject, setSelectedProject] = useState(null);\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  useEffect(() => {\n    axios.get('http://localhost:5000/projects').then(response => setProjects(response.data)).catch(error => console.error(error));\n  }, []);\n  const addProject = newProject => {\n    axios.post('http://localhost:5000/projects', newProject).then(response => {\n      const projectId = response.data;\n      setProjects({\n        ...projects,\n        [projectId]: {\n          ...newProject,\n          images: []\n        }\n      });\n    }).catch(error => console.error(error));\n  };\n  const removeProject = projectId => {\n    axios.delete(`http://localhost:5000/projects/${projectId}`).then(() => {\n      const updatedProjects = {\n        ...projects\n      };\n      delete updatedProjects[projectId];\n      setProjects(updatedProjects);\n      setSelectedProject(null); // Clear selection if deleted\n    }).catch(error => console.error(error));\n  };\n  const updateProject = (projectId, updatedProject) => {\n    axios.put(`http://localhost:5000/projects/${projectId}`, updatedProject).then(() => {\n      const updatedProjects = {\n        ...projects,\n        [projectId]: updatedProject\n      };\n      setProjects(updatedProjects);\n    }).catch(error => console.error(error));\n  };\n  const updateProjectImages = (projectId, images) => {\n    const updatedProjects = {\n      ...projects\n    };\n    updatedProjects[projectId].images = images;\n    setProjects(updatedProjects);\n  };\n  const selectProject = projectId => {\n    setSelectedProject(projectId);\n    setModalIsOpen(true);\n  };\n  const closeModal = () => {\n    setModalIsOpen(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Gestion de la Collection d'Images\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ProjectList, {\n      projects: projects,\n      addProject: addProject,\n      removeProject: removeProject,\n      selectProject: selectProject\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), selectedProject && /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: modalIsOpen,\n      onRequestClose: closeModal,\n      contentLabel: \"D\\xE9tails du Projet\",\n      className: \"Modal\",\n      overlayClassName: \"Overlay\",\n      children: /*#__PURE__*/_jsxDEV(ProjectDetailsModal, {\n        project: projects[selectedProject],\n        projectId: selectedProject,\n        updateProject: updateProject,\n        removeProject: removeProject,\n        updateProjectImages: updateProjectImages,\n        closeModal: closeModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"3XmAI1x64/3oWr0gnswKQ8guecw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","ProjectList","ProjectDetailsModal","ProjectManager","axios","Modal","jsxDEV","_jsxDEV","setAppElement","App","_s","projects","setProjects","selectedProject","setSelectedProject","modalIsOpen","setModalIsOpen","get","then","response","data","catch","error","console","addProject","newProject","post","projectId","images","removeProject","delete","updatedProjects","updateProject","updatedProject","put","updateProjectImages","selectProject","closeModal","className","children","fileName","_jsxFileName","lineNumber","columnNumber","isOpen","onRequestClose","contentLabel","overlayClassName","project","_c","$RefreshReg$"],"sources":["E:/NOAM/logiciels/wamp64/www/PortefolioV3/image-collection-manager/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ProjectList from './components/ProjectList';\nimport ProjectDetailsModal from './components/ProjectDetailsModal';\nimport ProjectManager from './ProjectManager';\nimport axios from 'axios';\nimport Modal from 'react-modal';\n\nModal.setAppElement('#root'); // Assurez-vous que le root est configuré dans index.js\n\n\nfunction App() {\n    const [projects, setProjects] = useState({});\n    const [selectedProject, setSelectedProject] = useState(null);\n    const [modalIsOpen, setModalIsOpen] = useState(false);\n\n    useEffect(() => {\n        axios.get('http://localhost:5000/projects')\n            .then(response => setProjects(response.data))\n            .catch(error => console.error(error));\n    }, []);\n\n    const addProject = (newProject) => {\n        axios.post('http://localhost:5000/projects', newProject)\n            .then(response => {\n                const projectId = response.data;\n                setProjects({ ...projects, [projectId]: { ...newProject, images: [] } });\n            })\n            .catch(error => console.error(error));\n    };\n\n    const removeProject = (projectId) => {\n        axios.delete(`http://localhost:5000/projects/${projectId}`)\n            .then(() => {\n                const updatedProjects = { ...projects };\n                delete updatedProjects[projectId];\n                setProjects(updatedProjects);\n                setSelectedProject(null); // Clear selection if deleted\n            })\n            .catch(error => console.error(error));\n    };\n\n    const updateProject = (projectId, updatedProject) => {\n        axios.put(`http://localhost:5000/projects/${projectId}`, updatedProject)\n            .then(() => {\n                const updatedProjects = { ...projects, [projectId]: updatedProject };\n                setProjects(updatedProjects);\n            })\n            .catch(error => console.error(error));\n    };\n\n    const updateProjectImages = (projectId, images) => {\n        const updatedProjects = { ...projects };\n        updatedProjects[projectId].images = images;\n        setProjects(updatedProjects);\n    };\n\n    const selectProject = (projectId) => {\n        setSelectedProject(projectId);\n        setModalIsOpen(true);\n    };\n\n    const closeModal = () => {\n        setModalIsOpen(false);\n    };\n\n    return (\n        <div className=\"App\">\n            <h1>Gestion de la Collection d'Images</h1>\n            <ProjectList \n                projects={projects} \n                addProject={addProject}\n                removeProject={removeProject}\n                selectProject={selectProject}\n            />\n            {selectedProject && (\n                <Modal \n                    isOpen={modalIsOpen}\n                    onRequestClose={closeModal}\n                    contentLabel=\"Détails du Projet\"\n                    className=\"Modal\"\n                    overlayClassName=\"Overlay\"\n                >\n                    <ProjectDetailsModal \n                        project={projects[selectedProject]}\n                        projectId={selectedProject}\n                        updateProject={updateProject}\n                        removeProject={removeProject}\n                        updateProjectImages={updateProjectImages}\n                        closeModal={closeModal}\n                    />\n                </Modal>\n            )}\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}